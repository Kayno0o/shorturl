---
export interface Props {
  variant?: 'primary' | 'secondary' | 'ghost' | 'danger'
  size?: 'sm' | 'md' | 'lg'
  type?: 'button' | 'submit' | 'reset'
  class?: string
  [key: string]: any
}

const {
  variant = 'primary',
  size = 'md',
  type = 'button',
  class: className = '',
  ...props
} = Astro.props

const baseClasses = 'inline-flex items-center justify-center gap-2 font-medium rounded-xl transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2'

const variants = {
  primary: 'bg-blue-600 hover:bg-blue-700 text-white hover:shadow-lg hover:-translate-y-0.5 active:translate-y-0 focus:ring-blue-500',
  secondary: 'bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-900 dark:text-gray-100 hover:shadow-md hover:-translate-y-0.5 focus:ring-gray-500',
  ghost: 'bg-transparent hover:bg-gray-100 dark:hover:bg-gray-800 text-gray-700 dark:text-gray-300 focus:ring-gray-500',
  danger: 'bg-red-600 hover:bg-red-700 text-white hover:shadow-lg hover:-translate-y-0.5 active:translate-y-0 focus:ring-red-500',
}

const sizes = {
  sm: 'px-3 py-2 text-sm',
  md: 'px-6 py-3',
  lg: 'px-8 py-4 text-lg',
}

const classes = `${baseClasses} ${variants[variant]} ${sizes[size]} ${className}`
---

<button type={type} class={classes} {...props}>
  <slot />
</button>
