---
import type { Link, LinkAnalytics } from '../../api/orm/entities/link'
import { ArrowLeft, ExternalLink, Globe, MousePointerClick, Save, Trash2 } from '@lucide/astro'
import { getUserFromJwt } from '../../api/middleware/auth'
import Button from '../../components/Button.astro'
import Card from '../../components/Card.astro'
import Input from '../../components/Input.astro'
import UserLayout from '../../layouts/UserLayout.astro'
import { countryNames } from '../../utils/countries'

const { code } = Astro.params
const cookies = Astro.cookies
const user = getUserFromJwt(cookies.get('jwtToken')?.value)

if (!user) {
  return Astro.redirect('/auth/login')
}

const linkRes = await fetch(new URL(`/api/link/${code}`, `https://${import.meta.env.APP_URL}`), {
  headers: {
    Cookie: Astro.request.headers.get('cookie') || '',
  },
})

let link: Link | undefined

try {
  link = await linkRes.json()
}
catch (e) {
  console.error('Failed to fetch link:', e)
}

if (!link) {
  return Astro.redirect('/links')
}

const analytics: LinkAnalytics = JSON.parse(link.analytics)

const countryEntries = Object.entries(analytics.countries || {})
  .sort(([,a], [,b]) => b - a)
  .slice(0, 3) // Show top 3 countries
---

<UserLayout title={`Edit Link - ${code}`}>
  <div class="mx-auto max-w-2xl space-y-4">
    <!-- Header -->
    <Card class="p-4">
      <div class="flex items-center justify-between">
        <div>
          <h1 class="text-lg font-semibold">Edit Link</h1>
          <p class="text-xs" style="color: var(--text-secondary)">
            Update your short link settings
          </p>
        </div>
        <a
          href="/"
          class="btn btn-ghost btn-sm"
        >
          <ArrowLeft size={14} />
          Back
        </a>
      </div>
    </Card>

    <div class={`
      grid grid-cols-1 gap-4
      md:grid-cols-3
    `}
    >
      <!-- Edit Form -->
      <div class="md:col-span-2">
        <Card>
          <form
            action={`/api/link/update/${link.code}`}
            method="post"
            class="space-y-4"
          >
            <Input
              label="Short Code"
              name="code"
              value={link.code}
              required
              minlength={3}
              maxlength={32}
              help="3-32 characters"
            />

            <Input
              label="Destination URL"
              name="value"
              type="url"
              value={link.value}
              required
              help="Where users will be redirected"
            />

            <div class="flex gap-2">
              <Button type="submit" class="flex-1">
                <Save size={16} />
                Save Changes
              </Button>
              <form
                action={`/api/link/delete/${link.code}`}
                method="post"
                class="contents"
              >
                <Button type="submit" variant="danger">
                  <Trash2 size={16} />
                  Delete
                </Button>
              </form>
            </div>
          </form>
        </Card>
      </div>

      <!-- Stats & Info -->
      <div class="space-y-4">
        <!-- Quick Stats -->
        <Card>
          <h3 class="mb-3 text-sm font-semibold">Statistics</h3>
          <div class="space-y-3">
            <div class="flex items-center justify-between">
              <div class="flex items-center gap-2">
                <MousePointerClick
                  size={14}
                  class={`
                    text-purple-600
                    dark:text-purple-400
                  `}
                />
                <span class="text-xs" style="color: var(--text-secondary)">Total Clicks</span>
              </div>
              <span class="text-lg font-bold">{link.clickCount}</span>
            </div>
            <div class="grid gap-1.5">
              <div class="flex items-center gap-2">
                <Globe
                  size={14}
                  class={`
                    text-gray-600
                    dark:text-gray-400
                  `}
                />
                <span class="text-xs" style="color: var(--text-secondary)">Top Countries:</span>
              </div>
              {countryEntries.map(([countryCode, count]) => (
                <div class="flex items-center justify-between">
                  <span class="text-xs">{countryNames[countryCode]}</span>
                  <div class="flex items-center gap-2">
                    <div class="h-1 w-16 flex-1 overflow-hidden rounded-full" style="background-color: var(--bg-tertiary)">
                      <div
                        class="h-full w-full rounded-full"
                        style="background-color: var(--pastel-purple)"
                      />
                    </div>
                    <span class="text-xs font-medium">{count}</span>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </Card>

        <!-- Link Preview -->
        <Card>
          <h3 class="mb-3 text-sm font-semibold">Preview</h3>
          <div class="space-y-2">
            <div class="text-xs" style="color: var(--text-secondary)">Short URL</div>
            <code class="code-inline text-xs break-all">
              {new URL(`/${user.namespace}-${link.code}`, `https://${import.meta.env.SHORT_URL}`).href}
            </code>
            <a
              href={link.value}
              target="_blank"
              rel="noopener noreferrer"
              class={`
                mt-2 flex items-center gap-1 text-xs text-purple-600
                hover:underline
                dark:text-purple-400
              `}
            >
              <ExternalLink size={12} />
              Visit destination
            </a>
          </div>
        </Card>
      </div>
    </div>
  </div>
</UserLayout>
