---
import type { Link, LinkAnalytics } from '../api/orm/entities/link'
import {
  BarChart3,
  Globe,
  Key,
  Link as LinkIcon,
  LogOut,
  MousePointerClick,
  Plus,
  Shield,
  TrendingUp,
} from '@lucide/astro'
import { getUserFromJwt } from '../api/middleware/auth'
import Card from '../components/Card.astro'
import Layout from '../layouts/Layout.astro'
import { countryNames } from '../utils/countries'

const cookies = Astro.cookies
const user = getUserFromJwt(cookies.get('jwtToken')?.value)

if (!user) {
  return Astro.redirect('/auth/login')
}

const linksRes = await fetch(new URL('/api/link', `https://${import.meta.env.APP_URL}`), {
  headers: {
    Cookie: Astro.request.headers.get('cookie') || '',
  },
})
let links: Link[] = []
try {
  links = await linksRes.json()
}
catch (e) {
  console.error('Failed to fetch links:', e)
}

const totalClicks = links.reduce((sum, link) => sum + (link.clickCount || 0), 0)

const countriesAggregate: Record<string, number> = {}
for (const link of links) {
  try {
    const analytics: LinkAnalytics = JSON.parse(link.analytics || '{}')
    if (analytics.countries) {
      for (const [country, count] of Object.entries(analytics.countries))
        countriesAggregate[country] = (countriesAggregate[country] || 0) + count
    }
  }
  catch {}
}

const topCountries = Object.entries(countriesAggregate)
  .map(([code, count]) => ({ code, name: countryNames[code] || code, count }))
  .sort((a, b) => b.count - a.count)
  .slice(0, 5)
---

<Layout title="Dashboard">
  <div class="space-y-4" slot="header">
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-lg font-semibold">Welcome back, {user.username}</h1>
        <p class="text-xs" style="color: var(--text-secondary)">Manage your short links and view analytics</p>
      </div>
      <a href="/api/auth/logout" class="btn btn-ghost btn-sm">
        <LogOut size={14} />
        <span>Logout</span>
      </a>
    </div>
  </div>

  <div class="space-y-6">
    <!-- Quick Stats -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
      <Card variant="stat">
        <div class="flex items-center gap-3">
          <div class="p-2 rounded-lg" style="background-color: var(--pastel-purple)">
            <LinkIcon size={16} class="text-purple-700 dark:text-purple-300" />
          </div>
          <div>
            <div class="stat-value">{links.length}</div>
            <div class="stat-label">Total Links</div>
          </div>
        </div>
      </Card>

      <Card variant="stat">
        <div class="flex items-center gap-3">
          <div class="p-2 rounded-lg" style="background-color: var(--pastel-blue)">
            <MousePointerClick size={16} class="text-blue-700 dark:text-blue-300" />
          </div>
          <div>
            <div class="stat-value">{totalClicks.toLocaleString()}</div>
            <div class="stat-label">Total Clicks</div>
          </div>
        </div>
      </Card>

      <Card variant="stat">
        <div class="flex items-center gap-3">
          <div class="p-2 rounded-lg" style="background-color: var(--pastel-green)">
            <TrendingUp size={16} class="text-green-700 dark:text-green-300" />
          </div>
          <div>
            <div class="stat-value">{links.length > 0 ? Math.round(totalClicks / links.length) : 0}</div>
            <div class="stat-label">Avg. Clicks</div>
          </div>
        </div>
      </Card>

      <Card variant="stat">
        <div class="flex items-center gap-3">
          <div class="p-2 rounded-lg" style="background-color: var(--pastel-coral)">
            <Globe size={16} class="text-orange-700 dark:text-orange-300" />
          </div>
          <div>
            <div class="stat-value">{Object.keys(countriesAggregate).length}</div>
            <div class="stat-label">Countries</div>
          </div>
        </div>
      </Card>
    </div>

    <!-- Main Content Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-4">
      <!-- Links Section -->
      <div class="lg:col-span-2 space-y-4">
        <!-- Create Link -->
        <Card>
          <h2 class="text-sm font-semibold mb-3">Create New Link</h2>
          <form action="/api/link/create" method="post" class="flex gap-2">
            <input
              type="text"
              name="code"
              placeholder="custom-code (optional)"
              class="input-field flex-1"
            />
            <input
              type="url"
              name="value"
              required
              placeholder="https://example.com"
              class="input-field flex-2"
            />
            <button type="submit" class="btn btn-primary">
              <Plus size={16} />
              <span class="hidden sm:inline">Create</span>
            </button>
          </form>
        </Card>

        <!-- Links List -->
        <Card>
          <div class="flex items-center justify-between mb-3">
            <h2 class="text-sm font-semibold">Your Links</h2>
            <span class="text-xs" style="color: var(--text-tertiary)">{links.length} total</span>
          </div>

          {links.length > 0
            ? (
              <div class="space-y-2">
                {links.slice(0, 10).map(link => (
                  <div class="dash-card compact p-3 flex items-center justify-between gap-2">
                    <div class="flex-1 min-w-0">
                      <div class="flex items-center gap-2">
                        <code class="code-inline">{link.code}</code>
                        <span class="text-xs" style="color: var(--text-tertiary)">
                          {link.clickCount} clicks
                        </span>
                      </div>
                      <div class="text-xs truncate" style="color: var(--text-secondary)">
                        {link.value}
                      </div>
                    </div>
                    <div class="flex items-center gap-1">
                      <a
                        href={`/edit/${encodeURIComponent(link.code)}`}
                        class="btn-icon btn-ghost btn-sm"
                        title="Edit"
                      >
                        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                          <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" />
                          <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z" />
                        </svg>
                      </a>
                      <a
                        href={link.value}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="btn-icon btn-ghost btn-sm"
                        title="Visit"
                      >
                        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                          <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
                          <polyline points="15 3 21 3 21 9" />
                          <line x1="10" y1="14" x2="21" y2="3" />
                        </svg>
                      </a>
                    </div>
                  </div>
                ))}
              </div>
            )
            : (
              <p class="text-sm text-center py-8" style="color: var(--text-tertiary)">
                No links created yet. Create your first one above!
              </p>
            )}

          {links.length > 10 && (
            <div class="mt-3 pt-3 border-t" style="border-color: var(--border-color)">
              <a href="/links" class="text-xs text-purple-600 dark:text-purple-400 hover:underline">
                View all {links.length} links â†’
              </a>
            </div>
          )}
        </Card>
      </div>

      <!-- Sidebar -->
      <div class="space-y-4">
        <!-- Top Countries -->
        {topCountries.length > 0 && (
          <Card>
            <h3 class="text-sm font-semibold mb-3 flex items-center gap-2">
              <Globe size={14} />
              Top Countries
            </h3>
            <div class="space-y-2">
              {topCountries.map(country => (
                <div class="flex items-center justify-between">
                  <span class="text-xs">{country.name}</span>
                  <div class="flex items-center gap-2">
                    <div class="flex-1 h-1 w-16 rounded-full overflow-hidden" style="background-color: var(--bg-tertiary)">
                      <div
                        class="h-full rounded-full"
                        style={`width: ${(country.count / topCountries[0].count) * 100}%; background-color: var(--pastel-purple)`}
                      />
                    </div>
                    <span class="text-xs font-medium">{country.count}</span>
                  </div>
                </div>
              ))}
            </div>
          </Card>
        )}

        <!-- Quick Actions -->
        <Card>
          <h3 class="text-sm font-semibold mb-3">Quick Actions</h3>
          <div class="space-y-2">
            {!user.mfa_token && (
              <a href="/api/auth/mfa/create" class="flex items-center gap-2 text-xs p-2 rounded hover:bg-gray-50 dark:hover:bg-gray-800">
                <Shield size={14} class="text-purple-600 dark:text-purple-400" />
                <span>Enable Two-Factor Auth</span>
              </a>
            )}
            <button class="flex items-center gap-2 text-xs p-2 rounded hover:bg-gray-50 dark:hover:bg-gray-800 w-full text-left opacity-50 cursor-not-allowed">
              <Key size={14} />
              <span>API Keys (Coming Soon)</span>
            </button>
            <button class="flex items-center gap-2 text-xs p-2 rounded hover:bg-gray-50 dark:hover:bg-gray-800 w-full text-left opacity-50 cursor-not-allowed">
              <BarChart3 size={14} />
              <span>Analytics (Coming Soon)</span>
            </button>
          </div>
        </Card>
      </div>
    </div>
  </div>
</Layout>
